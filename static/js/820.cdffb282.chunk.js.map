{"version":3,"file":"static/js/820.cdffb282.chunk.js","mappings":"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","sources":["components/RegisterForm.jsx","pages/Register.jsx","../node_modules/@mui/icons-material/AccountCircle.js"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { register } from '../redux/auth/operations';\nimport {\n  Box,\n  Button,\n  FormControl,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  OutlinedInput,\n  TextField,\n  Typography,\n} from '@mui/material';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\nimport HowToRegIcon from '@mui/icons-material/HowToReg';\nimport EmailIcon from '@mui/icons-material/Email';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleClickShowPassword = () => setShowPassword(show => !show);\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n    const userName = form.elements.name.value;\n    const userEmail = form.elements.email.value;\n    const userPassword = form.elements.password.value;\n\n    dispatch(\n      register({ name: userName, email: userEmail, password: userPassword })\n    );\n\n    form.reset();\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      onSubmit={handleSubmit}\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        minHeight: '100vh',\n      }}\n    >\n      <TextField\n        label=\"Username\"\n        id=\"outlined-adornment-name\"\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Enter name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name can include letters, apostrophes, spaces, and hyphens.\"\n        sx={{ m: 1, width: '40ch' }}\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <AccountCircleIcon />\n            </InputAdornment>\n          ),\n        }}\n        autoComplete=\"off\"\n        required\n      />\n      <TextField\n        label=\"Email\"\n        id=\"outlined-adornment-email\"\n        type=\"email\"\n        name=\"email\"\n        placeholder=\"Enter email\"\n        pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n        title=\"Please enter a valid email address.\"\n        sx={{ m: 1, width: '40ch' }}\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <EmailIcon />\n            </InputAdornment>\n          ),\n        }}\n        autoComplete=\"off\"\n        required\n      />\n      <FormControl sx={{ m: 1, width: '40ch' }} variant=\"outlined\">\n        <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n        <OutlinedInput\n          label=\"Password\"\n          id=\"outlined-adornment-password\"\n          type={showPassword ? 'text' : 'password'}\n          name=\"password\"\n          placeholder=\"Enter password\"\n          pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$\"\n          title=\"Password must contain at least one number, one uppercase and lowercase letter, and at least eight or more characters.\"\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <IconButton\n                aria-label=\"toggle password visibility\"\n                onClick={handleClickShowPassword}\n                onMouseDown={handleMouseDownPassword}\n                edge=\"end\"\n              >\n                {showPassword ? <VisibilityOff /> : <Visibility />}\n              </IconButton>\n            </InputAdornment>\n          }\n          autoComplete=\"off\"\n          required\n        />\n      </FormControl>\n      <Button type=\"submit\" variant=\"contained\" sx={{ padding: '12px 32px' }}>\n        Register\n        <HowToRegIcon\n          sx={{ marginLeft: 1, display: 'inline-flex', alignItems: 'center' }}\n        />\n      </Button>\n      <Typography paragraph={true} sx={{ marginTop: '12px' }}>\n        Already have an account?{' '}\n        <NavLink to=\"/login\">\n          <Button variant=\"outlined\">Log In</Button>\n        </NavLink>\n      </Typography>\n    </Box>\n  );\n};\n","import { RegisterForm } from '../components/RegisterForm';\n\nconst Register = () => {\n  return (\n    <div>\n      <RegisterForm />\n    </div>\n  );\n};\n\nexport default Register;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 4c1.93 0 3.5 1.57 3.5 3.5S13.93 13 12 13s-3.5-1.57-3.5-3.5S10.07 6 12 6zm0 14c-2.03 0-4.43-.82-6.14-2.88C7.55 15.8 9.68 15 12 15s4.45.8 6.14 2.12C16.43 19.18 14.03 20 12 20z\"\n}), 'AccountCircle');\nexports.default = _default;"],"names":["RegisterForm","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_jsxs","Box","component","onSubmit","event","preventDefault","form","currentTarget","userName","elements","name","value","userEmail","email","userPassword","password","register","reset","sx","display","flexDirection","alignItems","justifyContent","minHeight","children","_jsx","TextField","label","id","type","placeholder","pattern","title","m","width","InputProps","startAdornment","InputAdornment","position","AccountCircleIcon","autoComplete","required","EmailIcon","FormControl","variant","InputLabel","htmlFor","OutlinedInput","endAdornment","IconButton","onClick","show","onMouseDown","edge","VisibilityOff","Visibility","Button","padding","HowToRegIcon","marginLeft","Typography","paragraph","marginTop","NavLink","to","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}