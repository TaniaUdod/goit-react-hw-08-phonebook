{"version":3,"file":"static/js/695.8f836fab.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.jsx","../node_modules/clsx/dist/clsx.m.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilterContacts = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilterContacts],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 400px;\n  padding: 16px;\n  background-color: #d9edf2;\n  border: 2px solid #d8d8e7;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  margin: 0 auto 20px;\n  gap: 20px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  font-size: 20px;\n  gap: 12px;\n`;\nexport const Input = styled.input`\n  padding: 4px;\n`;\nexport const Button = styled.button`\n  padding: 8px 20px;\n  cursor: pointer;\n  border-radius: 8px;\n  border: 2px solid #ababea;\n  font-size: 20px;\n  background-color: #b8b8f1;\n  transition: transform 0.3s ease, box-shadow 0.3s ease,\n    background-color 0.3s ease;\n\n  &:hover {\n    transform: scale(1.1);\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\n  }\n`;\n","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import { useDispatch, useSelector } from 'react-redux';\nimport { Form, Label, Input, Button } from './ContactForm.styled';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport { addContact } from '../../redux/contacts/operations';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const form = event.target;\n    const formName = form.elements.name.value;\n    const formNumber = form.elements.number.value;\n\n    const isExist = contacts.some(\n      contact => contact.name.toLowerCase() === formName.toLowerCase()\n    );\n\n    if (isExist) {\n      toast.error(`${formName} is already in contacts.`, {\n        theme: 'colored',\n        autoClose: 2500,\n      });\n      return;\n    }\n\n    dispatch(addContact({ name: formName, number: formNumber }));\n\n    toast.success(`${formName} has been successfully added to your contacts!`, {\n      theme: 'colored',\n      autoClose: 2500,\n    });\n\n    form.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={contacts.name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          placeholder=\"Enter name\"\n          title=\"Name can include letters, apostrophes, spaces, and hyphens.\"\n          autoComplete=\"off\"\n          required\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          value={contacts.number}\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          placeholder=\"Enter number\"\n          title=\"Phone number must consist of numbers and can contain spaces, periods, hyphens, and parentheses.\"\n          autoComplete=\"off\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n      <ToastContainer />\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: 20px;\n  gap: 12px;\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled.input`\n  width: 400px;\n  padding: 10px;\n  background-color: #d9edf2;\n  border: 2px solid #d8d8e7;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Input, Label } from './Filter.styled';\nimport { selectFilterContacts } from '../../redux/contacts/selectors';\nimport { filterContact } from '../../redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilterContacts);\n  const dispatch = useDispatch();\n\n  const onFilterChange = event => {\n    dispatch(filterContact(event.target.value));\n  };\n\n  return (\n    <Label>\n      Find contacts by name\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onFilterChange}\n        placeholder=\"Search by name\"\n      />\n    </Label>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  background-color: #f9fdfd;\n  border: 2px solid #d8d8e7;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  padding: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 16px;\n`;\nexport const Button = styled.button`\n  padding: 4px 16px;\n  cursor: pointer;\n  border-radius: 8px;\n  border: 2px solid #ababea;\n  font-size: 16px;\n  background-color: #b8b8f1;\n  transition: transform 0.3s ease, box-shadow 0.3s ease,\n    background-color 0.3s ease;\n\n  &:hover {\n    transform: scale(1.1);\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\n  }\n`;\n","import { Button, Item } from './ContactItem.styled';\n\nexport const ContactItem = ({ id, name, number, onDeleteContact }) => {\n  return (\n    <Item key={id}>\n      {name}: {number}\n      <Button type=\"button\" onClick={() => onDeleteContact(id)}>\n        Delete\n      </Button>\n    </Item>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  /* align-items: baseline; */\n  width: 400px;\n  padding: 16px;\n  background-color: #d9edf2;\n  border: 2px solid #d8d8e7;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  margin: 0 auto;\n  gap: 12px;\n`;\n","import { ContactItem } from 'components/ContactItem/ContactItem';\nimport { List } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectVisibleContacts } from '../../redux/contacts/selectors';\nimport { deleteContact } from '../../redux/contacts/operations';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n\n  const handleDelete = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <List>\n      {contacts.map(({ id, name, number }) => (\n        <ContactItem\n          key={id}\n          id={id}\n          name={name}\n          number={number}\n          onDeleteContact={() => handleDelete(id)}\n        />\n      ))}\n    </List>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from '../redux/contacts/selectors';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { Loader } from '../components/Loader/Loader';\nimport { Filter } from '../components/Filter/Filter';\nimport { ContactList } from '../components/ContactList/ContactList';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <h1>Your Phonebook</h1>\n      <ContactForm />\n      <div>\n        <h2>Contacts</h2>\n\n        {isLoading && <Loader />}\n\n        {contacts.length > 0 ? (\n          <Filter />\n        ) : (\n          <div style={{ textAlign: 'center', fontSize: '20px' }}>\n            Your phonebook is empty 🥺\n          </div>\n        )}\n\n        {contacts.length > 0 && <ContactList />}\n\n        {error && (\n          <p\n            style={{\n              textAlign: 'center',\n              marginTop: '20px',\n              fontSize: '28px',\n            }}\n          >\n            Sorry. {error} 😭\n          </p>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectFilterContacts","filter","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","contact","name","toLowerCase","includes","Form","styled","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","Input","_templateObject3","Button","_templateObject4","r","e","t","f","n","Array","isArray","length","arguments","ContactForm","useSelector","dispatch","useDispatch","_jsxs","onSubmit","event","preventDefault","form","target","formName","elements","value","formNumber","number","some","toast","concat","theme","autoClose","addContact","reset","children","_jsx","type","pattern","placeholder","title","autoComplete","required","ToastContainer","Filter","onChange","filterContact","Item","ContactItem","_ref","id","onDeleteContact","onClick","List","ContactList","map","deleteContact","handleDelete","useEffect","fetchContacts","_Fragment","Loader","style","textAlign","fontSize","marginTop"],"sourceRoot":""}